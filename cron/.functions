#!/bin/bash

function alert() {
  ALERT_TITLE="${1:-}"
  ALERT_MESSAGE="${2:-}"
  /usr/local/bin/terminal-notifier -title "${ALERT_TITLE}" -message "${ALERT_MESSAGE}" -sound default
}

function _run_cronjob() {
  if [[ "${DEBUG:-false}" != 'true' ]]; then
    RETVAL=0
    if OUTPUT=$("$@" 2>&1); then
      exit
    else
      RETVAL=$?
      alert "${@//${HOME}/\\~}" "Error"
      echo "${OUTPUT}"
      echo ""
      echo "ENV:"
      env
      echo ""
      echo "RETVAL: $RETVAL"
    fi
    exit $RETVAL
  else
    "$@"
  fi
}

function _exit_on_tethered() {
  ERROR_CODE=$(is-tethered || echo $?)
  case $ERROR_CODE in
  0)
    echo "Won't run all of '${JOB_NAME:-$0}' on tethered connection"
    exit 1
    ;;
  128)
    # It's not tethered; let's do it!
    return
    ;;
  *)
    echo "Error running 'is-tethered': $?"
    exit 2
    ;;
  esac
}

function _title() {
  local COLUMNS
  COLUMNS=$(tput cols)
  COLUMNS="${COLUMNS:-80}"
  if [[ ${ENVIRONMENT:-} == 'cron' ]]; then
    COLUMNS=33
  fi
  echo "=≡☰ ${*} ☰≡=" | awk '{L = '"${COLUMNS}"' - length; for(i=1; i<=int(L/2); i++) {printf "-";} printf "%s", $0; for(i=1; i<=int(L/2-.5); i++) {printf "-";}printf "\n";}'
}

function _print_shortlist() {
  cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1
  SHORTLIST=()
  for i in *.sh; do
    SCRIPT_PATH="${i}"
    if [ -r "$SCRIPT_PATH" ] && [ -x "$SCRIPT_PATH" ]; then
      SHORTLIST+=("${i%.sh}")
    fi
  done

  echo "${SHORTLIST[*]}"
}
